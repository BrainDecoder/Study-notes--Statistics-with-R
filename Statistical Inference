STATISTICAL INFERENCE

MSE
MSE = E[(theta_bar-theta)^2], where MSE is mean square error, E is expectation, theta_bar is estimator of the sample (calculated in simulation), theta is the parameter of the population
Bias = E(theta_bar)-theta, the bias of an estimator
MSE = Variance + Bias^2, where Variance is a measure of spread of the sampling distribution of the estimator about its expectation 

Using BOOTSTRAP to find MSE for an Exponential distribution sample:
- the simulation should be done with x.samp <- rexp(sample size, lam)
Applies to similar model random samplings.

ESTIMATION OF PARAMETERS
Var(P_bar) = Var(X)/n = p(1-p)/n, formula for Bernoulli, where P_bar is the estimator or relative frequency of the event in the sample, p is probability of success for population
? lambda_bar = E(X_bar), for Poisson, where lambda_bar is the expectation of a Poisson measurement, E(X_bar) is the sample average of Poisson observations
? , for Uniform, 
lambda_bar = 1/X_bar, for Exponential, where lambda_bar is the estimator of the rate, X_bar is the sample average
? miu = E(X_bar); sigma^2 = Var(S^2), for Normal, miu and sigma^2 are parameters of population, S^2 is the sample variance 

CONFIDENCE INTERVALS for mean/expectation (CI) (standard Normal distribution situation, big sample)
> CI of Confidence Level (CL) 95% = x_bar +/- qnorm(0.975)*S/sqrt(n), where x_bar is sample mean, s is sample standard deviation, n is sample size
> CL = mean ((x_bar>=LCL & (x_bar<=UCL)), where x_bar is expected value of sample average, LCL/UCL are lower and upper confidence levels generated in simulation using CI formula above

> 95% CL = qnorm (0.975) = 1.96
> 90% CL = qnorm(0.95) = 1.645

CONFIDENCE INTERVALS for probability/proportion (standard Normal distribution situation, big sample)
> CI = p_hat +/- qnorm(0.975)*sqrt(p_hat*(1-p_hat)/n), where p_hat is estimate probability, n is sample size 
> CL = mean ((p >= LCL) & (p <= UCL)), where p is probability, LCL/UCL are lower and upper confidence levels generated in simulation using CI formula above

T-DISTRIBUTION for expectation (expectation of a Normal measurement situation, small sample)
> T-DISTRIBUTION (or test statistic) ~ (x_bar-E(X))/(S/sqrt(n)), where x_bar is sample average, E(X) is the hypothesis average, S is sample sd
> P ( |T-DISTRIBUTION| <= qt(0.975, n-1)) = 0.95
> CI = X_bar +/- qt(0.975, n-1) * S / sqrt(n), where CL is 95%, S is sample sd distribution, X_bar is sample mean distribution, n is the specific subgroup sample size  
> CL = mean ((x_bar>=LCL & (x_bar<=UCL)), where x_bar is the expectation of the measurement, not the one created in simulation 

> tapply (seq. of values, factor with subcategories, name of a function) = applies the function to each subcategory using the values 
> qt(0.975, 20) > [1] 2.085963 = qt computes the percentiles of the t-distribution
> qt(0.975, 200) > [1] 1.971896
> qt(0.975, 2000) > [1] 1.961151

CHI-square for proportion (expectation of a Normal measurement situation, small sample)
> CHI-square ~ (n-1)*S^2/sig^2, where S is sample standard deviation, sig is population standard deviation
> P (qchisq(0.025, n-1) <= CHI-square <= qchisq(0.975, n-1)) = 0.95
> CI = [(n-1)*S^2/qchisq(0.975, n-1), (n-1)*S^2/qchisq(0.025, n-1)], n is the specific subgroup sample size, first is LCL
> qchisq (probability, nr. of degrees of freedom) = calculates the percentiles of the chi-square distribution associated with the probability 

SAMPLE SIZE calculation (for proportions)
n = (p(1-p)z^2)/m^2, where max value of p(1-p) is 0.25 when p = 0.5 (the safe approach), m is margin of error, z is z score corresponding to significance level
n = (qnorm(0.975)/0.02)^2, when radius is no more than 0.01 (0.01*2 in formula) for CI of 95%
